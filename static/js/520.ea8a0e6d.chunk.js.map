{"version":3,"file":"static/js/520.ea8a0e6d.chunk.js","mappings":"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","sources":["components/Dialog/Dialog.jsx","components/ContactTable/ContactTable.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { styled, createTheme, ThemeProvider  } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction BootstrapDialogTitle(props) {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n}\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CustomizedDialog({ onClose, credentials, type }) {\n\n  const { id, name, number } = credentials;\n  const [openDialog, setOpenDialog] = React.useState(true);\n  const [contactName, setContactName] = React.useState(name);\n  const [contactNumber, setContactNumber] = React.useState(number);\n  const [formData, setFormData] = React.useState({id: '', name: '', number: ''})\n\n  let title;\n      switch (type) {\n      case 'edit':\n          title = \"Edit contact\";\n        break;\n      case 'add':\n          title = \"Add contact\";\n        break;\n      default:\n        return;\n    }\n\n  const handleChange = event => {\n    const { name } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setContactName(event.currentTarget.value)\n        break;\n      case 'number':\n        setContactNumber(event.currentTarget.value)\n        break;\n      default:\n        return;\n    }\n  }; \n\n  const handleSubmit = event => {\n    event.preventDefault();\n    switch (type) {\n      case 'edit':\n          setFormData({id, name: contactName, number: contactNumber})\n        break;\n      case 'add':\n          setFormData({name: contactName, number: contactNumber})\n        break;\n      default:\n        return;\n    }\n    \n    onClose(formData);\n    setOpenDialog(false);\n  }\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const defaultTheme = createTheme();\n\n  return (\n    <div>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={openDialog}\n      >\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {title}\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <ThemeProvider theme={defaultTheme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n              <CssBaseline />\n                <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                  <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Contact name\"\n                    name=\"name\"\n                    value = {contactName}\n                    onChange={handleChange}\n                    autoComplete=\"name\"\n                    autoFocus\n                  />\n                  <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"number\"\n                    value = {contactNumber}\n                    onChange={handleChange}\n                    label=\"Rhone number\"\n                    type=\"text\"\n                    id=\"number\"\n                    autoComplete=\"current-contact\"\n                  />\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    onClick={handleClose}\n                  >\n                    Save\n                  </Button>\n                </Box>\n            </Container>\n          </ThemeProvider>\n        </DialogContent>\n      </BootstrapDialog>\n    </div>\n  );\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n// import FilterListIcon from '@mui/icons-material/FilterList';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport Dialog from '../Dialog'\nimport { visuallyHidden } from '@mui/utils';\nimport { useCreateContactMutation, useDeleteContactMutation, useUpdateContactMutation } from 'redux/backend/api';\nimport { toast } from 'react-toastify';\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: 'id',\n    numeric: false,\n    disablePadding: false,\n    label: 'id',\n  },\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    label: 'Name',\n  },\n  {\n    id: 'number',\n    numeric: false,\n    disablePadding: false,\n    label: 'Phone',\n  },\n  {\n    id: 'actions',\n    numeric: false,\n    disablePadding: false,\n    label: 'Actions',\n  }\n];\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            align={'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n      </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nfunction EnhancedTableToolbar({ numSelected, handleOpenModal }) {\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          My Phonebook\n        </Typography>\n        <Tooltip title=\"Add contact\">\n          <IconButton onClick={handleOpenModal}>\n            <PersonAddIcon />\n          </IconButton>\n        </Tooltip>\n      \n    </Toolbar>\n  );\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default function EnhancedTable({rows}) {\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const [deleteContact] = useDeleteContactMutation();\n  const [updateContact] = useUpdateContactMutation();\n  const [createContact] = useCreateContactMutation();\n\n  const [openAdd, setOpenAdd] = React.useState(false);\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [credentials, setCredentials] = React.useState({id: '', name: '', number: ''})\n\n\n  const handleOpenAdd = () => {\n    setOpenAdd(true);\n  };\n\n  // const handleOpenEdit = () => {\n  //   setOpenEdit(true);\n  // };\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n) => n.name);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  const handleEditClick = (contactId, contactName, contactNumber) => {\n    setCredentials({id: contactId, name: contactName, number: contactNumber})\n    console.log(credentials)\n  }\n\n  const handleDeleteClick = async (event, contactId) => {\n    try {\n      await deleteContact(contactId);\n      //TODO: popup window with confirmation deleting contact\n      console.log('Contact was deleted from your phonebook');\n    } catch (error) {\n      console.log('Oops.. Please, try again');\n    }\n  }\n\n  const handleAddClose = async formData => {\n    try {\n      await createContact(formData);\n      console.log('Contact was created in your phonebook');\n    } catch (error) {\n      console.log('Oops.. Please, try again');\n    }\n    setOpenAdd(false);\n\n    console.log(formData);\n  };\n\n\n  const handleEditClose = async (formData) => {\n    try {\n      await updateContact(formData);\n      toast.success('Contact was updated in your phonebook');\n    } catch (error) {\n      console.log('Oops.. Please, try again');\n    }\n    setOpenEdit(false);\n    console.log(formData);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const visibleRows = React.useMemo(\n    () =>\n      stableSort(rows, getComparator(order, orderBy)).slice(\n        page * rowsPerPage,\n        page * rowsPerPage + rowsPerPage,\n      ),\n    [order, orderBy, page, rowsPerPage, rows],\n  );\n\n  return (\n    <>\n    <Box sx={{ width: '100%' }}>\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} handleOpenModal={handleOpenAdd} />\n\n        {openAdd && <Dialog onClose={handleAddClose} credentials={credentials} type='add' />}\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={'medium'}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {visibleRows.map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`;\n\n                return (\n                  <TableRow\n                    hover\n                    tabIndex={-1}\n                    key={row.name + index}\n                    sx={{ cursor: 'pointer' }}\n                    align=\"left\">\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"normal\"\n                    >\n                      { index + 1}\n                    </TableCell>\n                    <TableCell align=\"left\">{row.name}</TableCell>\n                    <TableCell align=\"left\">{row.number}</TableCell>\n                    <TableCell align=\"left\">\n                        <Tooltip title=\"Edit contact\">\n                          <IconButton onClick={() => handleEditClick(row.id, row.name, row.number)}>\n                          {/* () => handleEditClick(row.id, row.name, row.number) */}\n                            <EditIcon />\n                          </IconButton>\n                        </Tooltip>\n                      <IconButton onClick={(event) => handleDeleteClick(event, row.id)}><DeleteIcon /></IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (53) * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={4} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n          {openEdit && <Dialog onClose={handleEditClose} credentials={credentials} type='edit' />}\n      </Paper>\n    </Box>\n    </>\n  );\n}","// import ContactForm from 'components/ContactForm/ContactForm';\nimport BasicTable  from '../components/ContactTable';\nimport { useSelector } from \"react-redux\";\nimport { selectFilter } from 'redux/contacts/filterSlice'\nimport { useGetContactsQuery } from \"redux/backend/api\";\n\nconst ContactsPage = () => {\n  const {data: contacts, isSuccess, isError} = useGetContactsQuery();\n  const filter = useSelector(selectFilter)\n\n  if (!contacts) { return }\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n  console.log(visibleContacts);\n\n  return (\n    <>\n    {isSuccess && (\n    <div>\n          <BasicTable rows={ visibleContacts } />\n    </div>)\n    }\n    {isError && <div>Error</div>}\n    </>\n  );\n};\n\nexport default ContactsPage;"],"names":["BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","sx","m","p","IconButton","onClick","position","right","top","color","palette","grey","Close","CustomizedDialog","title","credentials","type","id","name","number","React","openDialog","setOpenDialog","contactName","setContactName","contactNumber","setContactNumber","formData","setFormData","handleChange","event","currentTarget","value","handleClose","defaultTheme","createTheme","open","DialogContent","dividers","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","onSubmit","preventDefault","noValidate","mt","TextField","margin","required","fullWidth","label","onChange","autoComplete","autoFocus","Button","variant","mb","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","order","onRequestSort","TableHead","TableRow","map","headCell","TableCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","EnhancedTableToolbar","numSelected","handleOpenModal","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","Tooltip","PersonAdd","EnhancedTable","rows","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","useDeleteContactMutation","deleteContact","useUpdateContactMutation","updateContact","useCreateContactMutation","createContact","openAdd","setOpenAdd","openEdit","setOpenEdit","setCredentials","handleDeleteClick","contactId","console","log","handleAddClose","handleEditClose","toast","emptyRows","Math","max","length","visibleRows","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","width","Paper","TableContainer","Table","minWidth","size","onSelectAllClick","target","checked","newSelected","n","rowCount","TableBody","row","labelId","hover","tabIndex","cursor","scope","Edit","Delete","style","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","useGetContactsQuery","contacts","data","isSuccess","isError","filter","useSelector","selectFilter","normalizedFilter","toLowerCase","visibleContacts","contact","includes"],"sourceRoot":""}